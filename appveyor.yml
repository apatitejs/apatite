# Test against this version of Node.js
environment:
  nodejs_version: "12.13.1"

services:
  - mssql2016
  - postgresql94
  - mysql

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version x64

  # Start Oracle Setup
  - git clone https://github.com/apatitejs/appveyor-oracle-setup
  - npm install ./appveyor-oracle-setup/
  - md temp
  - node ./appveyor-oracle-setup/app.js
  - 7z.exe e "temp/ora11gr2setup.zip.001" -o"orasetup"
  - orasetup\setup.exe /s /f1"%CD%\appveyor-oracle-setup\OracleXE-Install.iss" /f2"%CD%\orasetup\setup.log"
  - PATH=%APPVEYOR_BUILD_FOLDER%\oraxeinstall\app\oracle\product\11.2.0\server\bin;%PATH%
  - SET OCI_LIB_DIR=%APPVEYOR_BUILD_FOLDER%\oraxeinstall\app\oracle\product\11.2.0\server\oci\lib\msvc
  - SET OCI_INC_DIR=%APPVEYOR_BUILD_FOLDER%\oraxeinstall\app\oracle\product\11.2.0\server\oci\include
  - cd appveyor-oracle-setup
  - npm install oracledb@4.1.0
  - node orasetup.js
  - cd..
  # End Oracle Setup

  # install modules
  - npm install

before_test:
  - sqlcmd -S localhost -U sa -P Password12! -Q "CREATE DATABASE apatite" -d "master"
  - sqlcmd -S localhost -U sa -P Password12! -Q "CREATE LOGIN apatite WITH PASSWORD = 'Nodejs20090527!'" -d "apatite"
  - sqlcmd -S localhost -U sa -P Password12! -Q "EXEC apatite..sp_addsrvrolemember @loginame = 'apatite', @rolename = 'sysadmin'" -d "apatite"
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - PATH=C:\Program Files\PostgreSQL\9.4\bin\;%PATH%
  - psql -c "DROP DATABASE IF EXISTS apatite;" -U postgres
  - psql -c "CREATE DATABASE apatite;" -U postgres
  - psql -c "CREATE USER apatite WITH PASSWORD 'Nodejs20090527!' SUPERUSER INHERIT CREATEDB CREATEROLE NOREPLICATION;" -U postgres
  - SET MYSQL_PWD=Password12!
  - PATH=C:\Program Files\MySql\MySQL Server 5.7\bin\;%PATH%
  - mysql -e "DROP DATABASE IF EXISTS apatite;" -uroot
  - mysql -e "CREATE DATABASE apatite;" -uroot
  - mysql -e "CREATE USER 'apatite'@'localhost' IDENTIFIED BY 'Nodejs20090527!';" -uroot
  - mysql -e "GRANT ALL PRIVILEGES ON apatite.* TO 'apatite'@'localhost' WITH GRANT OPTION;" -uroot
  - mysql -e "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';" -uroot


# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - npm test

after_test:
  - npm install istanbul@0.4.4
  - npm install coveralls@2.11.9
  - node_modules\.bin\istanbul cover node_modules\njsunit\bin\njsunit.js --report lcovonly
  - ps: get-content .\coverage\lcov.info | node .\node_modules\coveralls\bin\coveralls.js
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

build: off